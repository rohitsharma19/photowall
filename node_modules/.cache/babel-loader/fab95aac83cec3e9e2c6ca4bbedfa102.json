{"ast":null,"code":"import postsData from '../data/posts';\nimport { combineReducers } from 'redux';\n\nfunction postsReducer(state, action) {\n  //state = postsData;\n  console.log(\"postsData:\" + postsData);\n  state = {\n    posts: postsData\n  };\n\n  switch (action.type) {\n    case 'REMOVE_POST':\n      return [...state.posts.slice(0, action.index), ...state.posts.slice(action.index + 1)];\n\n    case 'ADD_POST':\n      return [...state.posts, action.post];\n\n    default:\n      return state;\n  }\n}\n\nfunction commentsReducer(state = [], action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  postsReducer,\n  commentsReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/home/luvly/Workspaces/ReactJSCourse/photowall_v2/src/redux/reducer.js"],"names":["postsData","combineReducers","postsReducer","state","action","console","log","posts","type","slice","index","post","commentsReducer","rootReducer"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,eAAtB;AACA,SAASC,eAAT,QAAgC,OAAhC;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAoC;AAChC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeN,SAA3B;AACAG,EAAAA,KAAK,GAAG;AACJI,IAAAA,KAAK,EAAGP;AADJ,GAAR;;AAIA,UAAQI,MAAM,CAACI,IAAf;AACI,SAAK,aAAL;AAAoB,aAAO,CAAC,GAAGL,KAAK,CAACI,KAAN,CAAYE,KAAZ,CAAkB,CAAlB,EAAoBL,MAAM,CAACM,KAA3B,CAAJ,EAAuC,GAAGP,KAAK,CAACI,KAAN,CAAYE,KAAZ,CAAkBL,MAAM,CAACM,KAAP,GAAe,CAAjC,CAA1C,CAAP;;AACpB,SAAK,UAAL;AAAiB,aAAO,CAAC,GAAGP,KAAK,CAACI,KAAV,EAAiBH,MAAM,CAACO,IAAxB,CAAP;;AACjB;AAAU,aAAOR,KAAP;AAHd;AAMH;;AAED,SAASS,eAAT,CAAyBT,KAAK,GAAC,EAA/B,EAAmCC,MAAnC,EAA0C;AACtC,UAAQA,MAAM,CAACI,IAAf;AACI;AAAU,aAAOL,KAAP;AADd;AAIH;;AAED,MAAMU,WAAW,GAAGZ,eAAe,CAAC;AAACC,EAAAA,YAAD;AAAcU,EAAAA;AAAd,CAAD,CAAnC;AAEA,eAAeC,WAAf","sourcesContent":["import postsData from '../data/posts';\nimport { combineReducers } from 'redux';\n\nfunction postsReducer(state, action){\n    //state = postsData;\n    console.log(\"postsData:\" + postsData);\n    state = {\n        posts : postsData\n    }\n\n    switch (action.type){\n        case 'REMOVE_POST': return [...state.posts.slice(0,action.index), ...state.posts.slice(action.index + 1)]\n        case 'ADD_POST': return [...state.posts, action.post]\n        default : return state\n\n    }\n}\n\nfunction commentsReducer(state=[], action){\n    switch (action.type){\n        default : return state\n    }\n    \n}\n\nconst rootReducer = combineReducers({postsReducer,commentsReducer})\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}