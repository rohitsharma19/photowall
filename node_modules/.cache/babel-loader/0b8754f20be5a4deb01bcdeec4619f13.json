{"ast":null,"code":"import _defineProperty from\"/home/luvly/Workspaces/ReactJSCourse/photowall_v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{database}from'../database/config';export function startAddingPost(post){return function(dispatch){return database.ref('posts').update(_defineProperty({},post.id,post)).then(function(){dispatch(addPost(post));}).catch(function(error){console.log(error);});};}export function startLoadingPosts(){return function(dispatch){return database.ref('posts').once('value').then(function(snapshot){var posts=[];snapshot.forEach(function(childSnapshot){posts.push(childSnapshot.val());});dispatch(loadPost(posts));}).catch(function(error){console.log(error);});};}export function startRemovingPost(index,id){return function(dispatch){return database.ref(\"posts/\".concat(id)).remove().then(function(){dispatch(removePost(index));}).catch(function(error){console.log(error);});};}export function startAddingComment(comment,postId){return function(dispatch){return database.ref('comments/'+postId).push(comment).then(function(){dispatch(addComment(comment,postId));}).catch(function(error){console.log(error);});};}export function startLoadingComments(){return function(dispatch){return database.ref('comments').once('value').then(function(snapshot){var comments=[];snapshot.forEach(function(childSnapshot){comments[childSnapshot.key]=Object.values(childSnapshot.val());});dispatch(loadComments(comments));}).catch(function(error){console.log(error);});};}export function removePost(index){return{type:'REMOVE_POST',index:index};}export function addPost(post){return{type:'ADD_POST',post:post};}export function addComment(comment,postId){return{type:'ADD_COMMENT',comment:comment,postId:postId};}export function loadPost(posts){return{type:'LOAD_POSTS',posts:posts};}export function loadComments(comments){return{type:'LOAD_COMMENTS',comments:comments};}","map":{"version":3,"sources":["/home/luvly/Workspaces/ReactJSCourse/photowall_v2/src/redux/actions.js"],"names":["database","startAddingPost","post","dispatch","ref","update","id","then","addPost","catch","error","console","log","startLoadingPosts","once","snapshot","posts","forEach","childSnapshot","push","val","loadPost","startRemovingPost","index","remove","removePost","startAddingComment","comment","postId","addComment","startLoadingComments","comments","key","Object","values","loadComments","type"],"mappings":"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","sourcesContent":["import {database} from '../database/config';\n\nexport function startAddingPost(post){\n    return (dispatch) => {\n        return database.ref('posts').update({[post.id]:post}).then(()=>{\n            dispatch(addPost(post))\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n}\n\nexport function startLoadingPosts(){\n    return(dispatch) => {\n        return database.ref('posts').once('value').then((snapshot)=>{\n            let posts = [];\n            snapshot.forEach((childSnapshot) => {\n                posts.push(childSnapshot.val());\n            });\n            dispatch(loadPost(posts))\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n}\n\nexport function startRemovingPost(index, id){\n    return(dispatch) => {\n        return database.ref(`posts/${id}`).remove().then(()=>{\n            dispatch(removePost(index))\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n}\n\nexport function startAddingComment(comment, postId){\n    return(dispatch) => {\n        return database.ref('comments/'+postId).push(comment).then(()=>{\n            dispatch(addComment(comment, postId))\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n}\n\nexport function startLoadingComments(){\n    return(dispatch)=>{\n        return database.ref('comments').once('value').then((snapshot)=>{\n            let comments = [];\n            snapshot.forEach((childSnapshot) => {\n                comments[childSnapshot.key] = Object.values(childSnapshot.val());\n            });\n            dispatch(loadComments(comments))\n\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n}\n\nexport function removePost(index){\n    return {\n        type: 'REMOVE_POST',\n        index\n    }\n}\n\nexport function addPost(post){\n    return {\n        type: 'ADD_POST',\n        post\n    }\n}\n\nexport function addComment(comment, postId){\n    return {\n        type: 'ADD_COMMENT',\n        comment,\n        postId\n    }\n}\n\nexport function loadPost(posts){\n    return {\n        type : 'LOAD_POSTS',\n        posts\n    }\n}\n\nexport function loadComments(comments){\n    return {\n        type : 'LOAD_COMMENTS',\n        comments\n    }\n}"]},"metadata":{},"sourceType":"module"}